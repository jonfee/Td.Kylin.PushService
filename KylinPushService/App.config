<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="PushApi" type="KylinPushService.ConfigManager.PushApiConfigManager,KylinPushService" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6" />
  </startup>
  <appSettings>
    <!--
    * Redis服务器连接配置信息，相关配置项及说明查看StackExchange.Redis的官方文档
    * 参考网址：https://github.com/StackExchange/StackExchange.Redis/blob/master/Docs/Configuration.md
    -->
    <add key="RedisConfiguration" value="139.129.194.132:6399,password=kylinjonfee++" />
    <add key="ConnectionString" value="data source=139.129.194.132;initial catalog=kylin_test;persist security info=True;user id=kylintest;password=kylintest++;MultipleActiveResultSets=True;" />
    <!--
    *
    * 上门/预约相关消息推送
    *
    -->
    <!--Redis服务器数据库中，保存上门预约相关消息推送数据队列的数据库位置索引号，一般为0－16，具体存储位置取决于数据存储时给定的位置-->
    <add key="RedisAppointDbIndex" value="1" />
    <!--Redis中上门订单下单后的消息数据存储的Key-->
    <add key="RedisKeyAppointShangMenCreate" value="ShangMen" />
    <!--Redis中预约订单下单后的消息数据存储的Key-->
    <add key="RedisKeyAppointYuYueCreate" value="YuYue" />
    <!--Redis中上门预约订单指派后的消息数据存储的Key-->
    <add key="RedisKeyAppointAllot" value="OrderAllot" />
    <!--Redis中上门预约订单被接单后的消息数据存储的Key-->
    <add key="RedisKeyAppointAccept" value="OrderAccept" />
    <!--
    *
    * 商家订单推送
    *
    -->
    <!--Redis中商家订单付款后的消息数据存储的Key-->
    <add key="PayMerchantOrder" value="PayMerchantOrder" />
    <!--Redis中商家订单商家发货后的消息数据存储的Key-->
    <add key="SendMerchantOrder" value="SendMerchantOrder" />
    <!--Redis中商家订单用户确认收货后的消息数据存储的Key-->
    <add key="ConfirmMerchantOrder" value="ConfirmMerchantOrder" />
    <add key="UserMessageBuy" value="UserMessageBuy" />
    <!--
    *
    * 限时福利相关消息推送
    *
    -->
    <!--
    *
    * 跑腿相关消息推送
    *
    -->
    <add key="RedisLegworkDbIndex" value="1" />
    <!--用户下单推送给工作端-->
    <add key="LegworkUserAddOrder" value="LegworkUserAddOrder" />
    <!--工作端报价，推送给用户端-->
    <add key="LegworkOffer" value="LegworkOffer" />
    <!--用户确认订单,推送给工作端-->
    <add key="LegworkUserConfirmOrder" value="LegworkUserConfirmOrder" />
    <!--工作端确认送达(取送物品)及工作端选择线下支付时(购买物品),推送给用户端-->
    <add key="LegworkConfirmDelivery" value="LegworkConfirmDelivery" />
    <!--工作端选择线上支付,推送给用户端-->
    <add key="LegworkDownPay" value="LegworkDownPay" />
    <!--用户端线上支付成功,推送给工作端-->
    <add key="LegworkUserTopPay" value="LegworkUserTopPay" />
    <add key="LegworkMessageBuy" value="LegworkMessageBuy" />
    <!--Redis服务器数据库中，保存限时福利相关消息推送数据队列的数据库位置索引号，一般为0－16，具体存储位置取决于数据存储时给定的位置-->
    <add key="RedisWelfareDbIndex" value="1" />
    <!--Redis中限时福利中奖消息数据存储的Key-->
    <add key="RedisKeyWelfareLotteryResult" value="WelfareLottery" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
  </appSettings>
  <PushApi>
    <ModuleID>T003</ModuleID>
    <Secret>3d16024f-d7fb-4f64-b0f1-72d0112671ea</Secret>
    <Api name="ShangMenCreate" url="http://139.129.194.132:9109/v1/appoint/pushshangmen" method="post" />
    <Api name="YuYueCreate" url="http://139.129.194.132:9109/v1/appoint/pushyuyue" method="post" />
    <Api name="OrderAllot" url="http://139.129.194.132:9109/v1/appoint/allot" method="post" />
    <Api name="OrderAccept" url="http://139.129.194.132:9109/v1/appoint/accept" method="post" />
    <Api name="WelfareLottery" url="http://139.129.194.132:9109/v1/welfare/lottery" method="post" />
    <Api name="LegworkUserAddOrder" url="http://139.129.194.132:9109/v1/legwork/assign_order" method="post" />
    <Api name="LegworkOffer" url="http://139.129.194.132:9109/v1/legwork/order_offer" method="post" />
    <Api name="LegworkUserConfirmOrder" url="http://139.129.194.132:9109/v1/legwork/order_confirm" method="post" />
    <Api name="LegworkConfirmDelivery" url="http://139.129.194.132:9109/v1/legwork/order_delivery" method="post" />
    <Api name="LegworkDownPay" url="http://139.129.194.132:9109/v1/legwork/request_payment" method="post" />
    <Api name="LegworkUserTopPay" url="http://139.129.194.132:9109/v1/legwork/payment_complete" method="post" />
    <Api name="LegworkMessageBuy" url="http://139.129.194.132:9109/v1/legwork/msgbuy" method="post" />
    <Api name="UserMessageBuy" url="http://139.129.194.132:9109/v1/merchant/msgbuy" method="post" />
    <Api name="SendMerchantOrder" url="http://139.129.194.132:9109//v1/order/send" method="post" />
  </PushApi>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
</configuration>